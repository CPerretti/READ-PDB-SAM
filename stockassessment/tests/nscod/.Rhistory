require("testthat")
?all.equal
?cat
?stop
stopifnot(require("testthat"),#
		require("stockassessment"))#
#
cn<-read.ices("cn.dat")#
cw<-read.ices("cw.dat")#
dw<-read.ices("dw.dat")#
lf<-read.ices("lf.dat")#
lw<-read.ices("lw.dat")#
mo<-read.ices("mo.dat")#
nm<-read.ices("nm.dat")#
pf<-read.ices("pf.dat")#
pm<-read.ices("pm.dat")#
sw<-read.ices("sw.dat")#
surveys<-read.ices("survey.dat")#
#
dat<-setup.sam.data(surveys=surveys,#
                    residual.fleet=cn, #
                    prop.mature=mo, #
                    stock.mean.weight=sw, #
                    catch.mean.weight=cw, #
                    dis.mean.weight=dw, #
                    land.mean.weight=lw,#
                    prop.f=pf, #
                    prop.m=pm, #
                    natural.mortality=nm, #
                    land.frac=lf)#
#
conf<-defcon(dat)#
conf$keyLogFsta[1,] <- c(0, 1, 2, 3, 4, 5)#
conf$corFlag <- 2#
conf$keyLogFpar <- matrix(#
         c(-1, -1, -1, -1, -1, -1,#
            0,  1,  2,  3,  4, -1,#
            5,  6,  7,  8, -1, -1#
           ), nrow=3, byrow=TRUE)#
conf$keyVarF[1,] <- c(0, 1, 1, 1, 1, 1)#
conf$keyVarObs <- matrix(#
         c( 0,  1,  2,  2,  2,  2,#
            3,  4,  4,  4,  4, -1,#
            5,  6,  6,  6, -1, -1#
           ), nrow=3, byrow=TRUE)#
conf$noScaledYears <- 13#
conf$keyScaledYears <- 1993:2005#
conf$keyParScaledYA <- row(matrix(NA, nrow=13, ncol=6))-1#
conf$fbarRange <- c(2,4)#
#
par<-defpar(dat,conf)#
fit<-sam.fit(dat,conf,par)#
#rep.EXP<-read.csv("rep.EXP", header=FALSE)#
rep.EXP<-read.csv("rep.bad", header=FALSE)#
#
context("nscod example")#
expect_equal(fit$opt$objective, rep.EXP, tol=1e-6)
par<-defpar(dat,conf)#
fit<-sam.fit(dat,conf,par)#
#res.EXP<-read.csv("res.EXP", header=FALSE)#
res.EXP<-read.csv("res.bad", header=FALSE)#
#
context("nscod example")#
expect_equal(fit$opt$objective, res.EXP, tol=1e-6)
str(res.EXP)
?read.csv
file.show("res.EXP")
stdin("res.EXP")
cin("res.EXP")
pipe("res.EXP")
load("res.EXP")
??compare
str(fit)
?test_check
stopifnot(require("testthat"),#
		require("stockassessment"))#
#
cn<-read.ices("cn.dat")#
cw<-read.ices("cw.dat")#
dw<-read.ices("dw.dat")#
lf<-read.ices("lf.dat")#
lw<-read.ices("lw.dat")#
mo<-read.ices("mo.dat")#
nm<-read.ices("nm.dat")#
pf<-read.ices("pf.dat")#
pm<-read.ices("pm.dat")#
sw<-read.ices("sw.dat")#
surveys<-read.ices("survey.dat")#
#
dat<-setup.sam.data(surveys=surveys,#
                    residual.fleet=cn, #
                    prop.mature=mo, #
                    stock.mean.weight=sw, #
                    catch.mean.weight=cw, #
                    dis.mean.weight=dw, #
                    land.mean.weight=lw,#
                    prop.f=pf, #
                    prop.m=pm, #
                    natural.mortality=nm, #
                    land.frac=lf)#
#
conf<-defcon(dat)#
conf$keyLogFsta[1,] <- c(0, 1, 2, 3, 4, 5)#
conf$corFlag <- 2#
conf$keyLogFpar <- matrix(#
         c(-1, -1, -1, -1, -1, -1,#
            0,  1,  2,  3,  4, -1,#
            5,  6,  7,  8, -1, -1#
           ), nrow=3, byrow=TRUE)#
conf$keyVarF[1,] <- c(0, 1, 1, 1, 1, 1)#
conf$keyVarObs <- matrix(#
         c( 0,  1,  2,  2,  2,  2,#
            3,  4,  4,  4,  4, -1,#
            5,  6,  6,  6, -1, -1#
           ), nrow=3, byrow=TRUE)#
conf$noScaledYears <- 13#
conf$keyScaledYears <- 1993:2005#
conf$keyParScaledYA <- row(matrix(NA, nrow=13, ncol=6))-1#
conf$fbarRange <- c(2,4)#
#
par<-defpar(dat,conf)#
fit<-sam.fit(dat,conf,par)
ls()
save(fit, "fit.expected.Rdata")
save(fit, file="fit.expected.Rdata")
fit2<-sam.fit(dat,conf,par)
fit.exp<-load("fit.expected.Rdata")
str(fit.exp)
fit.exp=fit
save(fit.exp, file="fit.expected.Rdata")
compare.fits <<- function(new.fit, exp.fit)#
	{#
		#new.fit and exp.fit are sam objects#
		#tolerances were copied from adcomp/tmb_examples/tools/unittest.R#
		 expect_equal(new.fit$opt$objective, exp.fit$opt$objective, tol=1e-4)#
		 expect_equal(new.fit$opt$par, exp.fit$opt$par, tol=1e-5)#
		 expect_equal(new.fit$sdrep$cov.fixed, exp.fit$sdrep$cov.fixed, tol=1e-4)#
		 expect_equal(new.fit$sdrep$diag.cov.random, exp.fit$sdrep$diag.cov.random, tol=1e-7)#
		 expect_equal(new.fit$sdrep$gradient.fixed, exp.fit$sdrep$gradient.fixed, tol=1e-4)#
		 expect_equal(new.fit$sdrep$par.fixed, exp.fit$sdrep$par.fixed, tol=1e-5)#
		 expect_equal(new.fit$sdrep$par.random, exp.fit$sdrep$par.random, tol=1e-6)#
		 expect_equal(new.fit$sdrep$value, exp.fit$sdrep$value, tol=1e-6)#
	}
?file.path
